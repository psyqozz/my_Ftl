/*
** ETNA PROJECT, 12/11/2018 by juzain_d
** container 
** File description:
**      ...
*/

#include "ftl.h"

int add_container_to_ship(ship_t *ship)
{
    container_t *container;
    my_putstr_color("blue", "adding the current container...\n");
    container = malloc(sizeof(container_t));
    if (container == NULL) {
        my_putstr_color("red", "your ship exploded when you put the container down\n");
        return (0);
    } else {
        container->first = NULL;
        container->last = NULL;
        container->nb_elem = 0;
        ship->container = container;
        my_putstr_color("green", "the container was successfully added!\n");
        return (1);
    }
}

void add_freight_to_container(ship_t *ship, freight_t *freight)
{

    if (ship->container->first == NULL) {
        ship->container->first = freight;
        ship->container->last = freight;
        ship->container->first->next = NULL;
        ship->container->first->prev = NULL;
    } else {
        freight->next = NULL;
        freight->prev = ship->container->last;
        ship->container->last->next = freight;
        ship->container->last = freight;
    }
    ship->container->nb_elem = ship->container->nb_elem + 1;
}

void del_freight_from_container(ship_t *ship, freight_t *freight)
{
    if (freight == ship->container->first || freight == ship->container->last) {
        if (freight == ship->container->first) {
            ship->container->first = NULL;
            ship->container->last = NULL;
        } else  {
            ship->container->last = freight->prev;
            ship->container->last->next = NULL;
        }
    } else {
        element->prev->next = freight->next;
        element->next->prev = freight->prev;
    }
    free(element);
    ship->container->nb_elem = ship->container->nb_elem - 1;
}
